jobs:
  install:
    docker:
      - image: node:13
    steps:
      - checkout
      - run: npm i
      - save_cache:
          key: node-cache-{{ .Revision }}
          paths:
            - "node_modules"

  build:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ .Revision }}
      - run: npm run build
      - save_cache:
          key: build-cache-{{ .Revision }}
          paths:
            - "dist"

  test:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ .Revision }}
      - run: npm run test -- --coverage
      - run: npx codecov

  deploy:
    docker:
      - image: node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - build-cache-{{ .Revision }}
      - run:
          command: |
            node -e "process.env.CIRCLE_TAG === \`v\${require('./package.json').version}\` ? process.exit(0) : (console.error('Tag version does not line up with version in package.json') || process.exit(1))"
            npm config set "//registry.npmjs.org/:_authToken" "$npm_TOKEN"
            npm publish --access=public
workflows:
  version: 2
  build_and_test:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - deploy:
          context: NPM
          requires:
            - install
            - test
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
